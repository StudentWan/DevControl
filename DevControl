#!/usr/bin/env node
var adb = require('adbkit');
var fs = require('fs');
var client = adb.createClient();
var JsonCellList = {"cellphone" : []};

var singlecell = require("./CellControl");
var singleCellList = [];

var app = require('express')();
var http = require('http').Server(app);
var io = require('socket.io')(http);

var users = {};

app.get('/',function(req, res) {
  res.sendFile(__dirname + '/index.html');
});

io.on('connection',function(socket) {

  socket.on('new user', function(user) {
    if(user in users) {
      
    } else {
      var nickname = user;
      users[nickname] = socket;
    }

    socket.on('disconnect', function(){ //return the cellphone if disconnected
      delete users[user];
      if(singleCellList[user] != null){
        for(i in JsonCellList.cellphone){
          if(JsonCellList.cellphone[i].id == singleCellList[user].id){
            JsonCellList.cellphone[i].status =0;
          }
        }
      delete singleCellList[user];
    }
  });
});

  socket.on('request message', function(nickname,msg) {
    var message;
    if(nickname in users) {
      if(msg == 'getDevice') { //get a cell
        for(i in JsonCellList.cellphone) {
              if(JsonCellList.cellphone[i].status == 0) {
                var temp = {"id" : JsonCellList.cellphone[i].id,
		                        "type" : JsonCellList.cellphone[i].type,
                            "timestamp" : JsonCellList.cellphone[i].timestamp};
                JsonCellList.cellphone[i].status = 1;
                singlecell.setSingleCell(temp);
                singleCellList[nickname] = singlecell.getSingleCell();
                break;
              }
            }
            if(singleCellList[nickname] == null) {
              message = 'No cellphone available.';
            } else {
              message = 'id: ' + singleCellList[nickname].id + '\n'
                      + 'type: ' + singleCellList[nickname].type + '\n'
                      + 'timestamp: ' + singleCellList[nickname].timestamp + '\n.';
            }
      users[nickname].emit('to' + nickname, message);
      } else if(msg == 'installAPK') { //install an apk
           var flag = 0;
           for(i in singleCellList) {
             if(i == nickname) {
               flag =1;
               break;
             } 
           }
           if(flag == 1) {
           var files = fs.readdirSync('/root/DevControl/app/');
           var apk = '/root/DevControl/app/' + files[0];
           client.install(singleCellList[nickname].id, apk).then(function () {
              });
           message = 'The installment will be finished in seconds.';
            } else {
              message = 'You don\'t hava a cellphone';
            } 
        users[nickname].emit('to' + nickname, message);     
      } else if(msg == 'returnDevice') { //return the cellphone you borrowed
        var flag = 0;
        for(i in singleCellList){
              if(i == nickname) {
                for(j in JsonCellList.cellphone){
                  if(JsonCellList.cellphone[j].id == singleCellList[i].id) {
                    JsonCellList.cellphone[j].status = 0;
                    break;
                  }
                }
                delete singleCellList[i];  
                message = nickname + ' has returned his/her phone.';
                flag = 1;
                break;
              }
        }
        if(flag == 0) {
          message = 'You didn\'t borrow a phone.';
        } 
        users[nickname].emit('to' + nickname, message);
      } else {
        users[nickname].emit('to' + nickname, 'Wrong input!');
      }
     }
    });
});

http.listen(3000, function() {
  console.log('Listening on *:3000');
});


client.trackDevices()
  .then(function(tracker) {
    tracker.on('add', function(device) {
      var time = new Date().getTime();
      var item = { "id" : device.id,
		               "type" : device.type,
                   "timestamp" : time,
                   "status" : 0 };
      JsonCellList.cellphone.push(item);
    });
    tracker.on('remove', function(device) {
      var delId = device.id;
      for(i in JsonCellList.cellphone) {
		    if(JsonCellList.cellphone[i].id == delId) JsonCellList.cellphone.splice(i,1);
	    }
      for(i in singleCellList) {
        if(singleCellList[i].id == delId) delete singleCellList[i];  
      }
  });
    tracker.on('end', function() {
      console.log('Tracking stopped');
    });
  })
  .catch(function(err) {
    console.error('Something went wrong:', err.stack);
  });