#!/usr/bin/env node
var adb = require('adbkit');
var singlecell = require("./CellControl");
var readline = require('readline');
var fs = require('fs');
var client = adb.createClient();
var JsonCellList = {"cellphone" : []};


client.trackDevices()
  .then(function(tracker) {
    tracker.on('add', function(device) {
      var time = new Date().getTime();
      var item = { "id" : device.id,
		               "type" : device.type,
                   "timestamp" : time,
                   "status" : 0 };
      JsonCellList.cellphone.push(item);
    });
    tracker.on('remove', function(device) {
      var delId = device.id;
      for(i in JsonCellList.cellphone) {
		    if(JsonCellList.cellphone[i].id == delId) JsonCellList.cellphone.splice(i,1);
	  }
      if(singlecell.getSingleCell() != null) {
        if(delId == singlecell.getSingleCell().id) singlecell.setSingleCell(null);
    }  
  });
    tracker.on('end', function() {
      console.log('Tracking stopped');
    });
  })
  .catch(function(err) {
    console.error('Something went wrong:', err.stack);
  });



var rl = readline.createInterface(process.stdin, process.stdout);

rl.setPrompt('> ');
rl.prompt();

rl.on('line', function(line) {
    switch(line.trim()) {
        case 'getDevice':
            for(i in JsonCellList.cellphone) {
              var temp = JsonCellList.cellphone[i];
              if(temp.status == 0) {
                singlecell.setSingleCell(temp);
                temp.status = 1;
                break;
              }
            }
            if(singlecell.getSingleCell() == null) {
              console.log('No cellphone available!')
            } else {
              console.log(singlecell.getSingleCell());
            }
            break;
        case 'installAPK':
            console.log('Wait for a moment.');
            var files = fs.readdirSync('/root/DevControl/app/');
            var apk = '/root/DevControl/app/' + files[0];
            client.install(singlecell.getSingleCell().id, apk).then(function () {
                  console.log('Install complete.');
            });
            break;
        case 'returnDevice':
            for(i in JsonCellList.cellphone){
              if(JsonCellList.cellphone[i].id == singlecell.getSingleCell().id){
                JsonCellList.cellphone[i].status = 0;
                singlecell.setSingleCell(null);
              }
            }
            console.log(JsonCellList);
            break;
        case 'close':
            rl.close();
            break;
        default:
            console.log('Wrong inputÔºÅ');
            break;
    }
    rl.prompt();
});

rl.on('close', function() {
    console.log('Exit.');
    process.exit(0);
});



